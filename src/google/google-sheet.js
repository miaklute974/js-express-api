const _ = require('lodash');
const fs = require('fs');
const { google } = require('googleapis');
require('./../shortcut/shortcut')
require('dotenv').config();
require("./google-oauth-generate-url")

async function getAuth() {
  //Oauth that reads from google-client-secret.json, which is generated by Google Cloud API Credentials page
  const redirectUris = ['http://localhost:3000', 'http://localhost:3000/success']
  const oAuth2Client = new google.auth.OAuth2(
    process.env.GOOGLE_CLIENT_ID, process.env.GOOGLE_CLIENT_SECRET, redirectUris[0],
  );

  //token is generated by google-oauth-get-tokens.js
  const token = fs.readFileSync(`${__dirname}\\google-oauth-token.json`, 'utf-8');
  oAuth2Client.setCredentials(JSON.parse(token));
  return oAuth2Client
};


async function readGoogleSheet() {

  oAuth2Client = await getAuth()
  const sheets = google.sheets({ version: 'v4', auth: oAuth2Client })

  return sheets.spreadsheets.values.get({
    spreadsheetId: `${process.env.GOOGLE_SPREADSHEET_ID}`,
    range: "Sheet1!A2:Z100"
  })
    .then((_.property('data.values')));
};


async function writeGoogleSheet(id) {

  oAuth2Client = await getAuth()
  const sheets = google.sheets({ version: 'v4', auth: oAuth2Client });

  //Spreadsheet ID of our target
  const spreadsheetId = process.env.GOOGLE_SPREADSHEET_ID

  await sheets.spreadsheets.values.append({
    spreadsheetId,
    range: "Sheet1!A:Z",
    valueInputOption: "USER_ENTERED",
    resource: {
      values: [[1, 2, 3, 4, 5]], //this will be an array of arrays from DB on stories we want.
    }
  }).then((res) => {
    console.log(`Status: ${res.status}`);
    return true
  }).catch((err) => {
    console.error(err);
  });

};


async function writeIterationToGoogleSheet() {

  oAuth2Client = await getAuth()
  const sheets = google.sheets({ version: 'v4', auth: oAuth2Client });

  //Spreadsheet ID of our target
  const spreadsheetId = process.env.GOOGLE_SPREADSHEET_ID

  storyArray = await foo()

  await sheets.spreadsheets.values.append({
    spreadsheetId,
    range: "Sheet1!A:Z",
    valueInputOption: "USER_ENTERED",
    resource: {
      values: storyArray, //[dataArray],
    }
  }).then((res) => {
    console.log(`Status: ${res.status}`);
    return true
  }).catch((err) => {
    console.error(err);
  });

};


const axios = require('axios');
const { foo } = require('./../shortcut/shortcut');

const token = '3Z0WQgO7S5LMCI52xDRuiaqmq5ItIpkxNl-9EpNOK0Q'
const HEADERS = { 'Content-Type': 'application/json', Authorization: `Bearer ${token}` }

const container = 3009
const base_url = `https://containers.netyield.com:${container}/api/v2`


async function createAccount(gsDataArray) {

  const options = {
    method: 'POST',
    url: `${base_url}/accounts`,
    headers: HEADERS,
    data: {
      account_type_id: gsDataArray[0],
      name: gsDataArray[1],
      number: gsDataArray[2],
      active: gsDataArray[3],
      check_number_index: gsDataArray[4],
      cost_center_id: gsDataArray[5],
      wire_number_index: gsDataArray[6]
    }

  };

  await axios(options)
    .then((res) => {
      console.log(JSON.stringify(res.data, null, 4))
    })
    .catch((error) => {
      console.log(error)
    });

  console.log(options.data)

};


async function createAccountsFromGS() {
  data = await readGoogleSheet()
    .then((res) => {
      res.forEach(element => {
        console.log(element);
        createAccount(element)
          .then((res) => {
            console.log(res)
          })
      });
    })

};


// createAccountsFromGS()


module.exports = { writeGoogleSheet, getAuth, writeIterationToGoogleSheet }